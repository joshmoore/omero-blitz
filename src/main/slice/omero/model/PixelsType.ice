    /*
    **   Generated by blitz/resources/templates/combined.vm
    **   See ../../README.ice for information on these types.
    **
    **   Copyright 2007, 2008 Glencoe Software, Inc. All rights reserved.
    **   Use is subject to license terms supplied in LICENSE.txt
    **
    */
 #ifndef PIXELSTYPE_ICE
 #define PIXELSTYPE_ICE
 #include <omero/model/IObject.ice>
 #include <omero/RTypes.ice>
 #include <omero/model/RTypes.ice>
 #include <omero/System.ice>
 #include <omero/Collections.ice>
 module omero {
   module model {

     module enums {
         const string PixelsTypebit = "bit";
         const string PixelsTypeint8 = "int8";
         const string PixelsTypeint16 = "int16";
         const string PixelsTypeint32 = "int32";
         const string PixelsTypeuint8 = "uint8";
         const string PixelsTypeuint16 = "uint16";
         const string PixelsTypeuint32 = "uint32";
         const string PixelsTypefloat = "float";
         const string PixelsTypedouble = "double";
         const string PixelsTypecomplex = "complex";
         const string PixelsTypedoublecomplex = "double-complex";
     };

     class Details;
     ["protected"] class PixelsType
     extends omero::model::IObject
     {
       omero::RString value;
       omero::RString getValue();
       void setValue(omero::RString theValue);
       omero::RInt bitSize;
       omero::RInt getBitSize();
       void setBitSize(omero::RInt theBitSize);
     };
   };
 };
 #endif // PIXELSTYPE_ICE
