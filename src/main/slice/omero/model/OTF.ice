    /*
    **   Generated by blitz/resources/templates/combined.vm
    **   See ../../README.ice for information on these types.
    **
    **   Copyright 2007, 2008 Glencoe Software, Inc. All rights reserved.
    **   Use is subject to license terms supplied in LICENSE.txt
    **
    */
 #ifndef OTF_ICE
 #define OTF_ICE
 #include <omero/model/IObject.ice>
 #include <omero/RTypes.ice>
 #include <omero/model/RTypes.ice>
 #include <omero/System.ice>
 #include <omero/Collections.ice>
 module omero {
   module model {
     class PixelsType;
     class FilterSet;
     class Objective;
     class Instrument;
     class Details;
     ["protected"] class OTF
     extends omero::model::IObject
     {
       omero::RInt version;
       omero::RInt getVersion();
       void setVersion(omero::RInt theVersion);
       omero::RInt sizeX;
       omero::RInt getSizeX();
       void setSizeX(omero::RInt theSizeX);
       omero::RInt sizeY;
       omero::RInt getSizeY();
       void setSizeY(omero::RInt theSizeY);
       omero::RBool opticalAxisAveraged;
       omero::RBool getOpticalAxisAveraged();
       void setOpticalAxisAveraged(omero::RBool theOpticalAxisAveraged);
       omero::model::PixelsType pixelsType;
       omero::model::PixelsType getPixelsType();
       void setPixelsType(omero::model::PixelsType thePixelsType);
       omero::RString path;
       omero::RString getPath();
       void setPath(omero::RString thePath);
       omero::model::FilterSet filterSet;
       omero::model::FilterSet getFilterSet();
       void setFilterSet(omero::model::FilterSet theFilterSet);
       omero::model::Objective objective;
       omero::model::Objective getObjective();
       void setObjective(omero::model::Objective theObjective);
       omero::model::Instrument instrument;
       omero::model::Instrument getInstrument();
       void setInstrument(omero::model::Instrument theInstrument);
     };
   };
 };
 #endif // OTF_ICE
