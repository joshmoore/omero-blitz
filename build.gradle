buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "gradle.plugin.com.zeroc.gradle.ice-builder:slice:1.4.5"
    }
}

plugins {
    id "java"
    id 'maven-publish'
    id 'org.openmicroscopy.dsl' version '5.5.0-SNAPSHOT'
    id 'org.openmicroscopy.blitz' version '5.5.0-SNAPSHOT'
}

apply plugin: "com.zeroc.gradle.ice-builder.slice"

group = 'org.openmicroscopy'
version = '5.5.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
    maven { url 'http://repo.boundlessgeo.com/main/' }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile 'org.openmicroscopy:omero-server:5.5.0-SNAPSHOT'
}

sourceSets {
    main {
        java {
            srcDirs "src/generated/java"
        }
        resources {
            srcDirs "src/generated/resources"
        }
    }
}

/**
 * Creates .combined files that can then be split into sources.
 * In this instance, we're splitting out .java and .ice files
 * from .combined files.
 **/
blitz {
    outputPath "src/generated"

    api {
        java {
            language "java"
            outputPath "java/omero/model"
        }

        ice {
            language "ice"
            outputPath "slice/omero/model"
            outputName "\$1"
        }
    }
}

dsl {
    templateFiles fileTree(
            dir: "src/main/resources/templates",
            include: '**/*.vm'
    )
    outputPath "src/generated"

    resource {
        iceMap {
            template "java_ice_map.vm"
            outputFile "java/omero/util/IceMap.java"
        }

        objectFactoryRegistry {
            template "java_obj_reg.vm"
            outputFile "java/omero/util/ModelObjectFactoryRegistry.java"
        }
    }
}

slice {
    java {
        include = [
                "src/generated/slice",
                "src/main/slice"
        ]
        files = fileTree(dir: "src/generated/slice", include: '**/*.ice') +
                fileTree(dir: "src/main/slice", include: '**/*.ice')
    }
}

afterEvaluate {
    if (slice.iceVersion.contains('3.7')) {
        slice.output = file('src/generated/ice37')
        dependencies.add('compile', 'com.zeroc:glacier2:3.7.+')
        sourceSets.main.java {
            srcDirs 'src/main/ice37', slice.output
        }

    } else if (slice.iceVersion.contains('3.6')) {
        slice.output = file('src/generated/ice36')
        dependencies.add('compile', 'com.zeroc:glacier2:3.6.+')
        sourceSets.main.java {
            srcDirs 'src/main/ice36', slice.output
        }
    }
}

// Set compileSlice to depend on the generation of ice files from "splitIce"
tasks.compileSlice.dependsOn "splitIce"

