buildscript {
    repositories {
        jcenter()
        mavenLocal()
    }

    dependencies {
        classpath 'com.openmicroscopy:dslplugin:1.0'
    }
}

apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'com.openmicroscopy.dslplugin'

group 'openmicroscopy.com'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
    maven { url 'http://artifacts.openmicroscopy.org/artifactory/maven/' }
    maven { url 'http://repo.boundlessgeo.com/main/' }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'

    compile 'com.openmicroscopy:omero-server:1.0-SNAPSHOT'
}

sourceSets {
    main {
        java {
            srcDirs 'src/main/java', 'src/generated/java'
        }
        resources {
            srcDirs 'src/main/resources', 'src/generated/resources'
        }
    }
}

dsl {
    velocity {
        resource_loader = 'file'
        file_resource_loader_path = "${projectDir}/src/main/resources/templates"
        file_resource_loader_cache = false
    }

    generate {
        javaIceMap {
            template = "java_ice_map.vm"
            outFile = file('src/generated/resources/IceMap.java')
            omeXmlFiles = project.fileTree(dir: "src/main/resources/templates", include: '**/*.ome.xml')
        }

        javaModelObjectFactoryRegistry {
            template = "java_obj_reg.vm"
            outFile = project.file('src/generated/resources/ModelObjectFactoryRegistry.java')
            omeXmlFiles = project.fileTree(dir: "src/main/resources/templates", include: '**/*.ome.xml')
        }

        enums {
            template = "enums.vm"
            outFile = project.file('src/generated/resources/enums.properties')
            omeXmlFiles = project.fileTree(dir: "src/main/resources/templates", include: '**/*.ome.xml')
        }
    }
}